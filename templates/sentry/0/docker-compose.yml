version: '2'

volumes:
  sentry-db-data:
    driver: ${VOLUME_DRIVER}
  sentry-filestore:
    driver: ${VOLUME_DRIVER}

services:

  sentry-server:
    image: sentry:8.22
    environment:
      SENTRY_DB_NAME: "${PSQL_DB}"
      SENTRY_DB_PASSWORD: "${PSQL_PASSWORD}"
      SENTRY_DB_USER: "${PSQL_USER}"
      SENTRY_EMAIL_HOST: "${SMTP_HOST}"
      SENTRY_EMAIL_PASSWORD: "${SMTP_PASSWORD}"
      SENTRY_EMAIL_PORT: "${SMTP_PORT}"
      SENTRY_EMAIL_USER: "${SMTP_USER}"
      SENTRY_POSTGRES_HOST: "postgresql"
      SENTRY_SECRET_KEY: "${SENTRY_SECRET}"
      SENTRY_SERVER_EMAIL: "${SENTRY_EMAIL}"
    links:
    - postgresql:postgres
    - redis:redis
    volumes:
    - sentry-filestore:/var/lib/sentry/files
    command:
    - /bin/bash
    - -c
    - sentry upgrade --noinput && sentry createuser --email ${SENTRY_ADMIN_USER} --password ${SENTRY_ADMIN_PASSWORD} --superuser && /entrypoint.sh run web || /entrypoint.sh run web
    labels:
      {{- if ne .Values.TRAEFIK_DOMAIN "" }}
      traefik.domain: "${TRAEFIK_DOMAIN}"
      {{- end }}
      {{- if ne .Values.TRAEFIK_HOST "" }}
      traefik.frontend.rule: 'Host: ${TRAEFIK_HOST}'
      {{- end }}
      traefik.enable: 'true'
      traefik.port: '9000'
      traefik.frontend.passHostHeader: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always

  sentry-cron:
    image: sentry:8.22
    environment:
      SENTRY_DB_NAME: "${PSQL_DB}"
      SENTRY_DB_PASSWORD: "${PSQL_PASSWORD}"
      SENTRY_DB_USER: "${PSQL_USER}"
      SENTRY_EMAIL_HOST: "${SMTP_HOST}"
      SENTRY_EMAIL_PASSWORD: "${SMTP_PASSWORD}"
      SENTRY_EMAIL_PORT: "${SMTP_PORT}"
      SENTRY_EMAIL_USER: "${SMTP_USER}"
      SENTRY_POSTGRES_HOST: "postgresql"
      SENTRY_SECRET_KEY: "${SENTRY_SECRET}"
      SENTRY_SERVER_EMAIL: "${SENTRY_EMAIL}"
    links:
    - postgresql:postgres
    - redis:redis
    volumes:
    - sentry-filestore:/var/lib/sentry/files
    command:
    - run
    - cron
    labels:
      io.rancher.container.hostname_override: container_name

  sentry-worker:
    image: sentry:8.22
    environment:
      SENTRY_DB_NAME: "${PSQL_DB}"
      SENTRY_DB_PASSWORD: "${PSQL_PASSWORD}"
      SENTRY_DB_USER: "${PSQL_USER}"
      SENTRY_EMAIL_HOST: "${SMTP_HOST}"
      SENTRY_EMAIL_PASSWORD: "${SMTP_PASSWORD}"
      SENTRY_EMAIL_PORT: "${SMTP_PORT}"
      SENTRY_EMAIL_USER: "${SMTP_USER}"
      SENTRY_POSTGRES_HOST: "postgresql"
      SENTRY_SECRET_KEY: "${SENTRY_SECRET}"
      SENTRY_SERVER_EMAIL: "${SENTRY_EMAIL}"
    links:
    - postgresql:postgres
    - redis:redis
    command:
    - run
    - worker
    volumes:
    - sentry-filestore:/var/lib/sentry/files
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name

  redis:
    image: redis:4-alpine
    labels:
      io.rancher.container.hostname_override: container_name

  postgresql:
    image: postgres:9.6-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${PSQL_DB}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_USER: ${PSQL_USER}
    volumes:
    - sentry-db-data:/var/lib/postgresql/data
    labels:
      io.rancher.container.hostname_override: container_name
